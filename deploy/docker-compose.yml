services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_PASSWORD:-YourStrongPassword123!}
      - MSSQL_PID=Developer
    ports:
      - "${SQL_PORT:-1435}:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P '${SQL_PASSWORD:-YourStrongPassword123!}' -Q 'SELECT 1' || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  backend:
    build:
      context: ..
      dockerfile: deploy/Dockerfile.backend
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    environment:
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-1433}
      - DB_NAME=${DB_NAME:-HumaneSociety}
      - DB_USER=${DB_USER:-SA}
      - DB_PASSWORD=${DB_PASSWORD:-${SQL_PASSWORD:-YourStrongPassword123!}}
      - DB_MAX_OPEN_CONNS=${DB_MAX_OPEN_CONNS:-25}
      - DB_MAX_IDLE_CONNS=${DB_MAX_IDLE_CONNS:-10}
      - DB_CONN_MAX_LIFE_TIME=${DB_CONN_MAX_LIFE_TIME:-5}
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  frontend:
    build:
      context: ..
      dockerfile: deploy/Dockerfile.frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8080}
    depends_on:
      - backend

volumes:
  mssql-data: